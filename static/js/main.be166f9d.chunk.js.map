{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","frameSize","itemWidth","step","animationDuration","propInfinite","infinite","useState","offset","setOffset","localInfinite","setLocalInfinite","dynamicItemWidth","setDynamicItemWidth","inputValue","setInputValue","inputAnimationDuration","setInputAnimationDuration","dynamicAnimationDuration","setDynamicAnimationDuration","toString","inputStep","setInputStep","localStep","setLocalStep","inputFrameSize","setInputFrameSize","localFrameSize","setLocalFrameSize","maxOffset","length","useEffect","scrollWidth","document","documentElement","style","setProperty","className","type","onClick","prevOffset","map","imgSrc","src","alt","title","value","min","max","onChange","e","newValue","parseInt","target","Number","isNaN","alert","placeholder","newStep","newFrameSize","App","state","this","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.be166f9d.chunk.js","sourcesContent":["/* eslint-disable no-alert */\n/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport '../styles/main.scss';\n\ntype CarouselProps = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<CarouselProps> = ({\n  images,\n  frameSize,\n  itemWidth,\n  step,\n  animationDuration,\n  infinite: propInfinite,\n}) => {\n  const [offset, setOffset] = useState(0);\n  const [localInfinite, setLocalInfinite] = useState(propInfinite);\n  const [dynamicItemWidth, setDynamicItemWidth] = useState<number>(itemWidth);\n  const [inputValue, setInputValue] = useState<number>(itemWidth);\n  const [inputAnimationDuration, setInputAnimationDuration]\n    = useState<number>(animationDuration);\n\n  const [dynamicAnimationDuration, setDynamicAnimationDuration]\n    = useState<number>(animationDuration);\n\n  const [inputStep, setInputStep] = useState<string>(step.toString());\n  const [localStep, setLocalStep] = useState<number>(step);\n\n  const [inputFrameSize, setInputFrameSize]\n    = useState<string>(frameSize.toString());\n  const [localFrameSize, setLocalFrameSize] = useState<number>(frameSize);\n\n  const maxOffset = images.length - localFrameSize;\n\n  const handlePrev = () => {\n    if (offset >= localStep) {\n      setOffset(prevOffset => prevOffset - localStep);\n    } else if (localInfinite) {\n      setOffset(maxOffset);\n    } else {\n      setOffset(0);\n    }\n  };\n\n  const handleNext = () => {\n    if (offset + localStep < maxOffset) {\n      setOffset(prevOffset => prevOffset + localStep);\n    } else if (localInfinite) {\n      setOffset(0);\n    } else {\n      setOffset(maxOffset);\n    }\n  };\n\n  const MIN_WIDTH = 100;\n  const MAX_WIDTH = 350;\n\n  const updateWidth = () => {\n    if (inputValue < MIN_WIDTH || inputValue > MAX_WIDTH) {\n      alert('Please enter a value between 100 and 350.');\n\n      return;\n    }\n\n    if (inputValue > 0) {\n      setDynamicItemWidth(inputValue);\n    }\n  };\n\n  const updateAnimationDuration = () => {\n    if (inputAnimationDuration > 0) {\n      setDynamicAnimationDuration(inputAnimationDuration);\n    }\n  };\n\n  // prideti safeguards min max values\n\n  const updateStep = () => {\n    const newStep = parseInt(inputStep, 10);\n\n    if (!Number.isNaN(newStep) && newStep > 0 && newStep <= images.length) {\n      setLocalStep(newStep);\n    } else {\n      alert('Please enter a valid step!');\n      setInputStep(localStep.toString());\n    }\n  };\n\n  // ???????????\n  // type checking needed\n\n  const updateFrameSize = () => {\n    const newFrameSize = parseInt(inputFrameSize, 10);\n\n    if (newFrameSize >= 1 && newFrameSize <= images.length) {\n      setLocalFrameSize(newFrameSize);\n    } else {\n      alert(\n        'Invalid frame size. Must be between 1 and the total number of images.',\n      );\n    }\n  };\n\n  useEffect(() => {\n    // console.log('useEffect has been triggered!');\n    const scrollWidth = offset * dynamicItemWidth;\n\n    document.documentElement.style.setProperty('--transform-offset', `-${scrollWidth}px`);\n    document.documentElement.style.setProperty('--image-size', `${dynamicItemWidth}px`);\n    document.documentElement.style.setProperty('--frame-size', `${localFrameSize}`);\n    document.documentElement.style.setProperty(\n      '--animation-duration', `${animationDuration}ms`,\n    );\n    document.documentElement.style.setProperty(\n      '--animation-duration', `${dynamicAnimationDuration}ms`,\n    );\n  }, [offset, dynamicItemWidth, localFrameSize, dynamicAnimationDuration]);\n\n  return (\n    <>\n      <div className=\"container\">\n        <button\n          type=\"button\"\n          onClick={handlePrev}\n          className={`button button--prev ${offset === 0 ? 'disabled' : ''}`}\n        >\n          Prev\n        </button>\n\n        <div className=\"Carousel\">\n          <ul className=\"Carousel__list transformed\">\n            {images.map((imgSrc) => (\n              <li key={imgSrc}>\n                <img className=\"Carousel__image\" src={imgSrc} alt=\"\" />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={handleNext}\n          className={`button button--next ${offset >= maxOffset ? 'disabled' : ''}`}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n\n      <div className=\"container--controls\">\n        <div className=\"controls\">\n          <div className=\"controls__infinite controls__item\">\n            <button\n              type=\"button\"\n              className={`button button--controls ${localInfinite ? 'button--active' : ''}`}\n              onClick={() => setLocalInfinite(!localInfinite)}\n            >\n              Toggle Infinite Scroll\n            </button>\n          </div>\n\n          <div className=\"controls__width controls__item\">\n            <input\n              className=\"controls__width\"\n              type=\"number\"\n              title=\"Enter the item width\"\n              value={inputValue}\n              min=\"100\"\n              max=\"350\"\n              onChange={(e) => {\n                const newValue = parseInt(e.target.value, 10);\n\n                if (!Number.isNaN(newValue)) {\n                  setInputValue(newValue);\n                }\n              }}\n            />\n\n            <button\n              type=\"button\"\n              className=\"button button--controls\"\n              onClick={updateWidth}\n            >\n              Set Width\n            </button>\n          </div>\n\n          <div className=\"controls__item controls__animation\">\n            <input\n              type=\"number\"\n              value={inputAnimationDuration}\n              onChange={\n                (e) => setInputAnimationDuration(Number(e.target.value))\n              }\n              placeholder=\"Enter duration in ms\"\n            />\n            <button\n              type=\"button\"\n              className=\"button button--controls\"\n              onClick={updateAnimationDuration}\n            >\n              Set Animation Duration\n            </button>\n          </div>\n\n          <div className=\"controls__item controls__step\">\n            <input\n              type=\"number\"\n              value={inputStep}\n              onChange={(e) => setInputStep(e.target.value)}\n              placeholder=\"Step\"\n              min=\"1\"\n            />\n\n            <button\n              type=\"button\"\n              className=\"button button--controls\"\n              onClick={updateStep}\n            >\n              Set Scroll Step\n            </button>\n          </div>\n\n          <div className=\"controls__frameSize controls__item\">\n            <input\n              type=\"number\"\n              title=\"Enter the frame size\"\n              value={inputFrameSize}\n              onChange={(e) => setInputFrameSize(e.target.value)}\n            />\n            <button\n              type=\"button\"\n              className=\"button button--controls\"\n              onClick={updateFrameSize}\n            >\n              Set Frame Size\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"App__title\"\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          frameSize={3}\n          step={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}